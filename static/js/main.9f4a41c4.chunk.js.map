{"version":3,"sources":["assets/images/ac-logo.svg","api/auth.js","contexts/AuthContext.jsx","pages/HomePage.jsx","components/common/auth.styled.js","assets/images/check-active.svg","assets/images/check-circle.svg","assets/images/check-hover.svg","components/AuthInput.jsx","components/Header.jsx","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoCollection.jsx","components/Footer.jsx","pages/LoginPage.jsx","pages/SignUpPage.jsx","api/todos.js","pages/TodoPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["_path","_path2","_path3","_path4","authURL","login","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","username","password","_yield$axios$post","data","wrap","_context","prev","next","axios","post","concat","sent","authToken","abrupt","_objectSpread","success","t0","console","error","stop","_x","apply","arguments","register","_ref4","_callee2","_ref3","email","_yield$axios$post2","_context2","_x2","checkPermission","_ref5","_callee3","response","_context3","get","headers","Authorization","_x3","defaultAuthContext","isAuthenticated","currentMember","logout","AuthContext","createContext","useAuth","useContext","AuthProvider","children","_useState","useState","_useState2","_slicedToArray","setIsAuthenticated","_useState3","_useState4","payload","setPayload","pathname","useLocation","useEffect","checkTokenIsValid","tempPayload","localStorage","getItem","jwt","_jsx","Provider","value","id","sub","name","_register2","_yield$_register","userName","setItem","_login2","_yield$_login","removeItem","HomePage","navigate","useNavigate","StyedContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledAuthInputContainer","_templateObject2","StyledButton","button","_templateObject3","StyledLinkText","_templateObject4","StyledLink","Link","_templateObject5","_excluded","_extends","Object","assign","bind","target","i","length","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAcLogo","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","fillRule","clipRule","d","ForwardRef","StyledContainer","StyledLabel","label","StyledInput","input","AuthInput","type","placeholder","onChange","_jsxs","e","StyledHeader","header","StyledGreetingText","Header","StyledAddTodoContainer","StyledLabelIcon","StyledInputContainer","StyledAddTodoActionContainer","TodoInput","inputValue","onKeyDown","onAddTodo","className","clsx","active","htmlFor","event","onClick","StyledTaskItem","CheckActiveIcon","CheckCircleIcon","CheckHoverIcon","TodoItem","todo","onToggleDone","onSave","onDelete","onChangeMode","inputRef","useRef","done","isDone","edit","isEdit","onDoubleClick","current","defaultValue","TodoCollection","todos","map","StyledFooter","footer","Footer","numTodos","LoginPage","setUserName","setPassword","_useAuth","handleClick","Swal","fire","position","timer","icon","showConfirmButton","AuthContainer","ACLogoIcon","AuthInputContainer","nameInputValue","passwordInputValue","AuthButton","AuthLink","to","AuthLinkText","SignUpPage","setEmail","_useState5","_useState6","emailInputValue","baseUrl","axiosInstance","create","baseURL","interceptors","request","use","config","token","getTodos","res","createTodo","patchTodo","patch","deleteTodo","_callee4","_context4","delete","TodoPage","setInputValue","setTodos","handleAddTodo","prevTodos","_toConsumableArray","handleKeyDowm","handleToggleDone","currentTodo","find","handleSave","handleDeleteTodo","_ref7","_callee5","_context5","filter","getTodosAsync","_ref8","_callee6","_todos","_context6","_ref6","App","BrowserRouter","basename","process","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"idAAIA,EAAOC,EAAQC,EAAQC,E,gGCGrBC,EAAU,0CAGHC,EAAK,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,OAAlBP,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAQI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGrBC,IAAMC,KAAK,GAADC,OAAIlB,EAAO,UAAU,CACpDQ,WACAC,aACC,KAAD,EAOF,GAPEC,EAAAG,EAAAM,KAHMR,EAAID,EAAJC,MAMcA,EAAdS,UAKM,CAADP,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SAAAC,YAAA,CACFC,SAAS,GAASZ,IAAI,cAAAE,EAAAQ,OAAA,SAE1BV,GAAI,QAAAE,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEXY,QAAQC,MAAM,kBAAiBb,EAAAW,IAAS,yBAAAX,EAAAc,OAAA,GAAArB,EAAA,mBAE3C,gBArBiBsB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KAwBLC,EAAQ,eAAAC,EAAA7B,YAAAC,cAAAC,MAAG,SAAA4B,EAAAC,GAAA,IAAA1B,EAAA2B,EAAA1B,EAAA2B,EAAAzB,EAAA,OAAAP,cAAAQ,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAAkC,OAAzBP,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALC,MAAO1B,EAAQyB,EAARzB,SAAQ4B,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAE/BC,IAAMC,KAAK,GAADC,OAAIlB,EAAO,aAAa,CACvDQ,WACA2B,QACA1B,aACC,KAAD,EACe,GADf2B,EAAAC,EAAAlB,KAJMR,EAAIyB,EAAJzB,MAKcA,EAAdS,UAEM,CAADiB,EAAAtB,KAAA,eAAAsB,EAAAhB,OAAA,SAAAC,YAAA,CACFC,SAAS,GAASZ,IAAI,cAAA0B,EAAAhB,OAAA,SAG1BV,GAAI,QAAA0B,EAAAvB,KAAA,GAAAuB,EAAAb,GAAAa,EAAA,SAEXZ,QAAQC,MAAM,sBAAqBW,EAAAb,IAAS,yBAAAa,EAAAV,OAAA,GAAAM,EAAA,mBAE/C,gBAjBoBK,GAAA,OAAAN,EAAAH,MAAA,KAAAC,UAAA,KAoBRS,EAAe,eAAAC,EAAArC,YAAAC,cAAAC,MAAG,SAAAoC,EAAOrB,GAAS,IAAAsB,EAAA,OAAAtC,cAAAQ,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAEpBC,IAAM4B,IAAI,GAAD1B,OAAIlB,EAAO,eAAe,CACxD6C,QAAS,CACPC,cAAe,UAAY1B,KAE5B,KAAD,EAJY,OAARsB,EAAQC,EAAAxB,KAAAwB,EAAAtB,OAAA,SAKPqB,EAAS/B,KAAKY,SAAO,OAAAoB,EAAA7B,KAAA,EAAA6B,EAAAnB,GAAAmB,EAAA,SAE5BlB,QAAQC,MAAM,6BAA4BiB,EAAAnB,IAAS,yBAAAmB,EAAAhB,OAAA,GAAAc,EAAA,kBAEtD,gBAX2BM,GAAA,OAAAP,EAAAX,MAAA,KAAAC,UAAA,K,sBCzCtBkB,EAAqB,CACzBC,iBAAiB,EACjBC,cAAe,KACfnB,SAAU,KACV9B,MAAO,KACPkD,OAAQ,MAGJC,EAAcC,wBAAcL,GAKrBM,EAAU,WAAH,OAASC,qBAAWH,EAAa,EAKxCI,EAAe,SAAHjD,GAAsB,IAAhBkD,EAAQlD,EAARkD,SAE7BC,EAA8CC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtDT,EAAeW,EAAA,GAAEE,EAAkBF,EAAA,GAE1CG,EAA8BJ,mBAAS,MAAKK,EAAAH,YAAAE,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAElBG,EAAaC,cAAbD,SA+BR,OA5BAE,qBAAU,WACR,IAAMC,EAAiB,eAAApE,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAc,EAAAmD,EAAA,OAAAnE,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGxB,GADMK,EAAYoD,aAAaC,QAAQ,aAExB,CAAD5D,EAAAE,KAAA,QAEK,OADjB+C,GAAmB,GACnBI,EAAW,MAAMrD,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAIEwB,EAAgBnB,GAAW,KAAD,EAAnCP,EAAAM,MAGV2C,GAAmB,GAEbS,EAAcG,SAAWtD,GAC/B8C,EAAWK,KAGXT,GAAmB,GACnBI,EAAW,OACZ,wBAAArD,EAAAc,OAAA,GAAArB,EAAA,KACF,kBAtBsB,OAAAJ,EAAA2B,MAAA,KAAAC,UAAA,KAwBvBwC,GACF,GAAG,CAACH,IAGFQ,cAACvB,EAAYwB,SAAQ,CACnBC,MAAO,CACL5B,kBAGAC,cAAee,GAAW,CACxBa,GAAIb,EAAQc,IACZC,KAAMf,EAAQe,MAGhBjD,SAAS,WAAD,IAAAkD,EAAA9E,YAAAC,cAAAC,MAAE,SAAA4B,EAAOtB,GAAI,IAAAuE,EAAA3D,EAAAH,EAAAmD,EAAA,OAAAnE,cAAAQ,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACkBgB,EAAS,CAC5CvB,SAAUG,EAAKwE,SACfhD,MAAOxB,EAAKwB,MACZ1B,SAAUE,EAAKF,WACd,KAAD,EAaD,OAbCyE,EAAA7C,EAAAlB,KAJMI,EAAO2D,EAAP3D,QAASH,EAAS8D,EAAT9D,WAMXmD,EAAcG,SAAWtD,KAK7B8C,EAAWK,GACXT,GAAmB,GACnBU,aAAaY,QAAQ,YAAahE,KAElC8C,EAAW,MACXJ,GAAmB,IACpBzB,EAAAhB,OAAA,SACME,GAAO,wBAAAc,EAAAV,OAAA,GAAAM,EAAA,KACf,gBAAAL,GAAA,OAAAqD,EAAApD,MAAA,KAAAC,UAAA,EApBQ,GAsBT7B,MAAM,WAAD,IAAAoF,EAAAlF,YAAAC,cAAAC,MAAE,SAAAoC,EAAO9B,GAAI,IAAA2E,EAAA/D,EAAAH,EAAAmD,EAAA,OAAAnE,cAAAQ,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACqBd,EAAM,CACzCO,SAAUG,EAAKwE,SACf1E,SAAUE,EAAKF,WACd,KAAD,EASD,OATC6E,EAAA3C,EAAAxB,KAHMI,EAAO+D,EAAP/D,QAASH,EAASkE,EAATlE,WAIXmD,EAAcG,SAAWtD,KAE7B8C,EAAWK,GACXT,GAAmB,GACnBU,aAAaY,QAAQ,YAAahE,KAElC8C,EAAW,MACXJ,GAAmB,IACpBnB,EAAAtB,OAAA,SACME,GAAO,wBAAAoB,EAAAhB,OAAA,GAAAc,EAAA,KACf,gBAAAH,GAAA,OAAA+C,EAAAxD,MAAA,KAAAC,UAAA,EAfK,GAiBNqB,OAAQ,WACNqB,aAAae,WAAW,aACxBrB,EAAW,MACXJ,GAAmB,EACrB,GACAL,SAEDA,GAGP,EC3Ge+B,EAbE,WACf,IAAQvC,EAAoBK,IAApBL,gBACFwC,EAAWC,cAEjBrB,qBAAU,WAENoB,EADExC,EACO,SAEA,SAEb,GAAG,CAACwC,EAAUxC,GAChB,E,wBCZM0C,EAAiBC,IAAOC,IAAGC,MAAAC,YAAA,oJAS3BC,EAA2BJ,IAAOC,IAAGI,MAAAF,YAAA,8CAKrCG,EAAeN,IAAOO,OAAMC,MAAAL,YAAA,+RAkB5BM,EAAiBT,IAAOC,IAAGS,MAAAP,YAAA,sEAM3BQ,EAAaX,YAAOY,IAAPZ,CAAYa,MAAAV,YAAA,oCJxC3BW,EAAY,CAAC,QAAS,WAC1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIlF,UAAUmF,OAAQD,IAAK,CAAE,IAAIE,EAASpF,UAAUkF,GAAI,IAAK,IAAIG,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,GAAU,CAAE,OAAOJ,CAAQ,EAAUJ,EAAS9E,MAAM0F,KAAMzF,UAAY,CAClV,SAAS0F,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKH,EAAnED,EACzF,SAAuCG,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKH,EAA5DD,EAAS,CAAC,EAAOW,EAAad,OAAOe,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWT,OAAQD,IAAOG,EAAMO,EAAWV,GAAQS,EAASG,QAAQT,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,CAAQ,CADhNc,CAA8BX,EAAQO,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiBd,OAAQD,IAAOG,EAAMY,EAAiBf,GAAQS,EAASG,QAAQT,IAAQ,GAAkBP,OAAOQ,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,GAAQ,CAAE,OAAOJ,CAAQ,CAG3e,SAASkB,EAAU1H,EAAM2H,GACvB,IAAIC,EAAQ5H,EAAK4H,MACfC,EAAU7H,EAAK6H,QACfC,EAAQb,EAAyBjH,EAAMmG,GACzC,OAAoB,gBAAoB,MAAOC,EAAS,CACtD2B,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DrD,GAAIsD,GACHD,GAAS,KAAMvI,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EgJ,SAAU,UACVC,SAAU,UACVC,EAAG,mKACHL,KAAM,aACH5I,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE+I,SAAU,UACVC,SAAU,UACVC,EAAG,mWACHL,KAAM,aACH3I,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE8I,SAAU,UACVC,SAAU,UACVC,EAAG,kMACHL,KAAM,aACH1I,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE6I,SAAU,UACVC,SAAU,UACVC,EAAG,ubACHL,KAAM,aAEV,CACA,I,4BAAIM,GAA0B,aAAiBd,GK1ChC,IL2CA,IK3CA,IAA0B,0CCA1B,OAA0B,yCCA1B,OAA0B,wCCEnCe,GAAkBpD,IAAOC,IAAGC,MAAAC,YAAA,2LAS5BkD,GAAcrD,IAAOsD,MAAKjD,MAAAF,YAAA,uEAM1BoD,GAAcvD,IAAOwD,MAAKhD,MAAAL,YAAA,kGAuBjBsD,GAhBG,SAAH9I,GAAuD,IAAjD+I,EAAI/I,EAAJ+I,KAAMJ,EAAK3I,EAAL2I,MAAOrE,EAAKtE,EAALsE,MAAO0E,EAAWhJ,EAAXgJ,YAAaC,EAAQjJ,EAARiJ,SACpD,OACEC,eAACT,GAAe,CAAAvF,SAAA,CACdkB,cAACsE,GAAW,CAAAxF,SAAEyF,IACdvE,cAACwE,GAAW,CACVG,KAAMA,GAAQ,OAEdzE,MAAOA,GAAS,GAEhB0E,YAAaA,GAAe,GAC5BC,SAAU,SAACE,GAAC,OAAa,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAWE,EAAE3C,OAAOlC,MAAM,MAInD,ECpCM8E,GAAe/D,IAAOgE,OAAM9D,MAAAC,YAAA,mMAc5B8D,GAAqBjE,IAAOC,IAAGI,MAAAF,YAAA,0EAkBtB+D,GAXA,SAAHvJ,GAAsB,IAAhBC,EAAQD,EAARC,SAChB,OACEiJ,eAACE,GAAY,CAAAlG,SAAA,CACXkB,cAAA,MAAAlB,SAAI,UACJgG,eAACI,GAAkB,CAAApG,SAAA,CAAC,MACfkB,cAAA,QAAAlB,SAAOjD,SAIlB,E,SC5BMuJ,GAAyBnE,IAAOC,IAAGC,MAAAC,YAAA,uSAgBnCiE,GAAkBpE,IAAOsD,MAAKjD,MAAAF,YAAA,uJAW9BkE,GAAuBrE,IAAOC,IAAGO,MAAAL,YAAA,4XA0BjCmE,GAA+BtE,IAAOC,IAAGS,QAAAP,YAAA,yLAgDhCoE,GAjCG,SAAH5J,GAAwD,IAAlD6J,EAAU7J,EAAV6J,WAAYZ,EAAQjJ,EAARiJ,SAAUa,EAAS9J,EAAT8J,UAAWC,EAAS/J,EAAT+J,UACpD,OACEb,eAACM,GAAsB,CACrBQ,UAAWC,aAAK,GAAI,CAAEC,OAAQL,EAAWnD,OAAS,IAAKxD,SAAA,CAEvDkB,cAACqF,GAAe,CAACO,UAAU,OAAOG,QAAQ,mBAC1C/F,cAACsF,GAAoB,CAAAxG,SACnBkB,cAAA,SACEG,GAAG,iBACHwE,KAAK,OACLC,YAAY,2BACZ1E,MAAOuF,EACPZ,SAAU,SAACmB,GACD,OAARnB,QAAQ,IAARA,KAAWmB,EAAM5D,OAAOlC,MAC1B,EACAwF,UAAW,SAACM,GACQ,UAAdA,EAAMxD,MACC,OAATkD,QAAS,IAATA,OAEJ,MAGJ1F,cAACuF,GAA4B,CAC3BK,UAAWC,aAAK,GAAI,CAAEC,OAAQL,EAAWnD,OAAS,IAAKxD,SAEvDkB,cAAA,UAAQ4F,UAAU,YAAYK,QAAS,kBAAe,OAATN,QAAS,IAATA,OAAS,EAATA,GAAa,EAAC7G,SAAC,qBAMpE,EC9FMoH,GAAiBjF,IAAOC,IAAGC,QAAAC,YAAA,4oDA0CH+E,GA0CFC,GAMEC,IAkDfC,GA7CE,SAAH1K,GAAgE,IAA1D2K,EAAI3K,EAAJ2K,KAAMC,EAAY5K,EAAZ4K,aAAcC,EAAM7K,EAAN6K,OAAQC,EAAQ9K,EAAR8K,SAAUC,EAAY/K,EAAZ+K,aAClDC,EAAWC,iBAAO,MASxB,OACE/B,eAACoB,GAAc,CACbN,UAAWC,aAAK,GAAI,CAAEiB,KAAMP,EAAKQ,OAAQC,KAAMT,EAAKU,SAAUnI,SAAA,CAE9DkB,cAAA,OAAK4F,UAAU,oBAAmB9G,SAChCkB,cAAA,QACE4F,UAAU,oBACVK,QAAS,WACK,OAAZO,QAAY,IAAZA,KAAeD,EAAKpG,GACtB,MAGJ2E,eAAA,OACEc,UAAU,iBACVsB,cAAe,kBAAkB,OAAZP,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAExG,GAAIoG,EAAKpG,GAAI8G,QAAQ,GAAO,EAACnI,SAAA,CAEnEkB,cAAA,QAAM4F,UAAU,sBAAqB9G,SAAEyH,EAAK/C,QAC5CxD,cAAA,SACEgE,IAAK4C,EACLhB,UAAU,uBACVF,UA5Bc,SAACM,GACjBY,EAASO,QAAQjH,MAAMoC,OAAS,GAAmB,UAAd0D,EAAMxD,MACvC,OAANiE,QAAM,IAANA,KAAS,CAAEtG,GAAIoG,EAAKpG,GAAIqD,MAAOoD,EAASO,QAAQjH,SAEhC,WAAd8F,EAAMxD,MACI,OAAZmE,QAAY,IAAZA,KAAe,CAAExG,GAAIoG,EAAKpG,GAAI8G,QAAQ,IAE1C,EAsBQG,aAAcb,EAAK/C,WAGvBxD,cAAA,OAAK4F,UAAU,oBAAmB9G,SAChCkB,cAAA,UACE4F,UAAU,6BAEVK,QAAS,kBAAc,OAARS,QAAQ,IAARA,OAAQ,EAARA,EAAWH,EAAKpG,GAAG,QAK5C,ECvHekH,GA1BQ,SAAHzL,GAMb,IALL0L,EAAK1L,EAAL0L,MACAd,EAAY5K,EAAZ4K,aACAC,EAAM7K,EAAN6K,OACAC,EAAQ9K,EAAR8K,SACAC,EAAY/K,EAAZ+K,aAEA,OACE3G,cAAA,OAAAlB,SACGwI,EAAMC,KAAI,SAAChB,GACV,OACEvG,cAACsG,GAAQ,CAEPC,KAAMA,EACNE,OAAQ,SAAAlL,GAAA,IAAG4E,EAAE5E,EAAF4E,GAAIqD,EAAKjI,EAALiI,MAAK,OAAa,OAANiD,QAAM,IAANA,OAAM,EAANA,EAAS,CAAEtG,KAAIqD,SAAQ,EAClDgD,aAAc,SAACrG,GAAE,OAAiB,OAAZqG,QAAY,IAAZA,OAAY,EAAZA,EAAerG,EAAG,EACxCwG,aAAc,SAAApJ,GAAA,IAAG4C,EAAE5C,EAAF4C,GAAI8G,EAAM1J,EAAN0J,OAAM,OAAmB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAExG,KAAI8G,UAAS,EAEhEP,SAAU,SAACvG,GAAE,OAAa,OAARuG,QAAQ,IAARA,OAAQ,EAARA,EAAWvG,EAAG,GAN3BoG,EAAKpG,GAShB,KAGN,ECnBMqH,GAAevG,IAAOwG,OAAMtG,QAAAC,YAAA,wKAY5BG,GAAeN,IAAOO,OAAMF,QAAAF,YAAA,sVAiDnBsG,GA9BA,SAAH9L,GAAsB,IAAhB+L,EAAQ/L,EAAR+L,SAQRnJ,EAAWG,IAAXH,OAUR,OACEsG,eAAC0C,GAAY,CAAA1I,SAAA,CACXgG,eAAA,KAAAhG,SAAA,CAAG,uCAGA6I,KAEH3H,cAACuB,GAAY,CAAC0E,QAfE,WAMlBzH,GACF,EAQuCM,SAAC,mBAG1C,E,oBC2Ee8I,GA1HG,WAChB,IAAA7I,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCyB,EAAQvB,EAAA,GAAE4I,EAAW5I,EAAA,GAC5BG,EAAgCJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAArCtD,EAAQuD,EAAA,GAAEyI,EAAWzI,EAAA,GACtByB,EAAWC,cAIjBgH,EAAmCpJ,IAA3BrD,EAAKyM,EAALzM,MAAOgD,EAAeyJ,EAAfzJ,gBAGT0J,EAAW,eAAApM,EAAAJ,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEM,IAApBoE,EAAS8B,OAAY,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGD,IAApBZ,EAASwG,OAAY,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAMHd,EAAM,CAC1BkF,WACA1E,aACC,KAAD,EAHW,IAAAI,EAAAM,KAKD,CAADN,EAAAE,KAAA,SAsBT,OAbA6L,KAAKC,KAAK,CAERC,SAAU,MAEV3E,MAAO,iCAEP4E,MAAO,IAEPC,KAAM,UAENC,mBAAmB,IAGrBpM,EAAAQ,OAAA,kBAKFuL,KAAKC,KAAK,CACRC,SAAU,MACV3E,MAAO,iCACP4E,MAAO,IACPC,KAAM,QACNC,mBAAmB,IAClB,yBAAApM,EAAAc,OAAA,GAAArB,EAAA,KACJ,kBAlDgB,OAAAC,EAAAsB,MAAA,KAAAC,UAAA,KA0EjB,OANAuC,qBAAU,WACJpB,GACFwC,EAAS,SAEb,GAAG,CAACA,EAAUxC,IAGZwG,eAACyD,EAAa,CAAAzJ,SAAA,CACZkB,cAAA,OAAAlB,SACEkB,cAACwI,GAAU,MAEbxI,cAAA,MAAAlB,SAAI,sBAEJkB,cAACyI,EAAkB,CAAA3J,SACjBkB,cAAC0E,GAAS,CACRH,MAAO,eACPrE,MAAOM,EACPoE,YAAa,iCACbC,SAAU,SAAC6D,GAAc,OAAKb,EAAYa,EAAe,MAI7D1I,cAACyI,EAAkB,CAAA3J,SACjBkB,cAAC0E,GACC,CACAC,KAAK,WAELJ,MAAO,eAEPrE,MAAOpE,EAEP8I,YAAa,iCAEbC,SAAU,SAAC8D,GAAkB,OAAKb,EAAYa,EAAmB,MAGrE3I,cAAC4I,EAAU,CAAC3C,QAAS+B,EAAYlJ,SAAC,iBAClCkB,cAAC6I,EAAQ,CAACC,GAAG,UAAShK,SACpBkB,cAAC+I,EAAY,CAAAjK,SAAC,qBAItB,ECFekK,GAnHI,WACjB,IAAAjK,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCyB,EAAQvB,EAAA,GAAE4I,EAAW5I,EAAA,GAC5BG,EAA0BJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA/B5B,EAAK6B,EAAA,GAAE4J,EAAQ5J,EAAA,GACtB6J,EAAgClK,mBAAS,IAAGmK,EAAAjK,YAAAgK,EAAA,GAArCpN,EAAQqN,EAAA,GAAErB,EAAWqB,EAAA,GAEtBrI,EAAWC,cAEjBgH,EAAsCpJ,IAA9BvB,EAAQ2K,EAAR3K,SAAUkB,EAAeyJ,EAAfzJ,gBAGZ0J,EAAW,eAAApM,EAAAJ,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACM,IAApBoE,EAAS8B,OAAY,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGD,IAApBZ,EAASwG,OAAY,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGJ,IAAjBc,EAAM8E,OAAY,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKAgB,EAAS,CAC7BoD,WACAhD,QACA1B,aACC,KAAD,EAJW,IAAAI,EAAAM,KASD,CAADN,EAAAE,KAAA,SAST,OAPA6L,KAAKC,KAAK,CACRC,SAAU,MACV3E,MAAO,iCACP4E,MAAO,IACPC,KAAM,UACNC,mBAAmB,IAErBpM,EAAAQ,OAAA,kBAGFuL,KAAKC,KAAK,CACRC,SAAU,MACV3E,MAAO,iCACP4E,MAAO,IACPC,KAAM,QACNC,mBAAmB,IAClB,yBAAApM,EAAAc,OAAA,GAAArB,EAAA,KACJ,kBAxCgB,OAAAC,EAAAsB,MAAA,KAAAC,UAAA,KA+DjB,OANAuC,qBAAU,WACJpB,GACFwC,EAAS,SAEb,GAAG,CAACA,EAAUxC,IAGZwG,eAACyD,EAAa,CAAAzJ,SAAA,CACZkB,cAAA,OAAAlB,SACEkB,cAACwI,GAAU,MAEbxI,cAAA,MAAAlB,SAAI,yCAEJkB,cAACyI,EAAkB,CAAA3J,SACjBkB,cAAC0E,GAAS,CACRH,MAAO,eACPrE,MAAOM,EACPoE,YAAa,iCACbC,SAAU,SAAC6D,GAAc,OAAKb,EAAYa,EAAe,MAI7D1I,cAACyI,EAAkB,CAAA3J,SACjBkB,cAAC0E,GAAS,CACRH,MAAO,QACPrE,MAAO1C,EACPoH,YAAa,2BACbC,SAAU,SAACuE,GAAe,OAAKH,EAASG,EAAgB,MAI5DpJ,cAACyI,EAAkB,CAAA3J,SACjBkB,cAAC0E,GAAS,CACRC,KAAK,WACLJ,MAAM,eACNrE,MAAOpE,EACP8I,YAAY,iCACZC,SAAU,SAAC8D,GAAkB,OAAKb,EAAYa,EAAmB,MAGrE3I,cAAC4I,EAAU,CAAC3C,QAAS+B,EAAYlJ,SAAC,iBAClCkB,cAAC6I,EAAQ,CAACC,GAAG,SAAQhK,SACnBkB,cAAC+I,EAAY,CAAAjK,SAAC,qBAItB,E,SCjIMuK,GAAU,qCAEVC,GAAgBjN,IAAMkN,OAAO,CACjCC,QAASH,KAGXC,GAAcG,aAAaC,QAAQC,KACjC,SAACC,GACC,IAAMC,EAAQhK,aAAaC,QAAQ,aAOnC,OAHI+J,IACFD,EAAO1L,QAAuB,cAAC,UAAA3B,OAAasN,IAEvCD,CACT,IAEA,SAAC7M,GACCD,QAAQC,MAAMA,EAChB,IAKK,IAAM+M,GAAQ,eAAAlO,EAAAJ,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAoO,EAAA,OAAAtO,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGFkN,GAAcrL,IAAI,GAAD1B,OAAI8M,GAAO,WAAU,KAAD,EAA9C,OAAHU,EAAG7N,EAAAM,KAAAN,EAAAQ,OAAA,SACFqN,EAAI/N,MAAI,OAAAE,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAEfY,QAAQC,MAAM,uBAAsBb,EAAAW,IAAS,yBAAAX,EAAAc,OAAA,GAAArB,EAAA,kBAEhD,kBARoB,OAAAC,EAAAsB,MAAA,KAAAC,UAAA,KAUR6M,GAAU,eAAAzO,EAAAC,YAAAC,cAAAC,MAAG,SAAA4B,EAAOgC,GAAO,IAAAkE,EAAAuD,EAAAgD,EAAA,OAAAtO,cAAAQ,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OACjB,OAAboH,EAAkBlE,EAAlBkE,MAAOuD,EAAWzH,EAAXyH,OAAMrJ,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEDkN,GAAchN,KAAK,GAADC,OAAI8M,GAAO,UAAU,CACvD7F,QACAuD,WACC,KAAD,EAHO,OAAHgD,EAAGrM,EAAAlB,KAAAkB,EAAAhB,OAAA,SAIFqN,EAAI/N,MAAI,OAAA0B,EAAAvB,KAAA,EAAAuB,EAAAb,GAAAa,EAAA,SAEfZ,QAAQC,MAAM,yBAAwBW,EAAAb,IAAS,yBAAAa,EAAAV,OAAA,GAAAM,EAAA,kBAElD,gBAXsBL,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KAaV8M,GAAS,eAAA1M,EAAA/B,YAAAC,cAAAC,MAAG,SAAAoC,EAAOwB,GAAO,IAAAa,EAAAqD,EAAAuD,EAAAgD,EAAA,OAAAtO,cAAAQ,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OACZ,OAAjB+D,EAAsBb,EAAtBa,GAAIqD,EAAkBlE,EAAlBkE,MAAOuD,EAAWzH,EAAXyH,OAAM/I,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAELkN,GAAcY,MAAM,GAAD3N,OAAI8M,GAAO,WAAA9M,OAAU4D,GAAM,CAC9DqD,QACAuD,WACC,KAAD,EAHO,OAAHgD,EAAG/L,EAAAxB,KAAAwB,EAAAtB,OAAA,SAIFqN,EAAI/N,MAAI,OAAAgC,EAAA7B,KAAA,EAAA6B,EAAAnB,GAAAmB,EAAA,SAEflB,QAAQC,MAAM,uBAAsBiB,EAAAnB,IAAS,yBAAAmB,EAAAhB,OAAA,GAAAc,EAAA,kBAEhD,gBAXqBH,GAAA,OAAAJ,EAAAL,MAAA,KAAAC,UAAA,KAaTgN,GAAU,eAAA9M,EAAA7B,YAAAC,cAAAC,MAAG,SAAA0O,EAAOjK,GAAE,IAAA4J,EAAA,OAAAtO,cAAAQ,MAAA,SAAAoO,GAAA,cAAAA,EAAAlO,KAAAkO,EAAAjO,MAAA,cAAAiO,EAAAlO,KAAA,EAAAkO,EAAAjO,KAAA,EAEbkN,GAAcgB,OAAO,GAAD/N,OAAI8M,GAAO,WAAA9M,OAAU4D,IAAM,KAAD,EAAvD,OAAH4J,EAAGM,EAAA7N,KAAA6N,EAAA3N,OAAA,SACFqN,EAAI/N,MAAI,OAAAqO,EAAAlO,KAAA,EAAAkO,EAAAxN,GAAAwN,EAAA,SAEfvN,QAAQC,MAAM,wBAAuBsN,EAAAxN,IAAS,yBAAAwN,EAAArN,OAAA,GAAAoN,EAAA,kBAEjD,gBAPsBhM,GAAA,OAAAf,EAAAH,MAAA,KAAAC,UAAA,KCgMRoN,GAlOE,WAEf,IAAAxL,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC0G,EAAUxG,EAAA,GAAEuL,EAAavL,EAAA,GAEhCG,EAA0BJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA/BkI,EAAKjI,EAAA,GAAEoL,EAAQpL,EAAA,GAEhByB,EAAWC,cAGjBgH,EAA2CpJ,IAAnCL,EAAeyJ,EAAfzJ,gBAAiBC,EAAawJ,EAAbxJ,cASnBmM,EAAa,eAAA9O,EAAAJ,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAK,EAAA,OAAAP,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAKM,IAAtBqJ,EAAWnD,OAAY,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMN4N,GAAW,CAC5BxG,MAAOiC,EACPsB,QAAQ,IACP,KAAD,EAHI/K,EAAIE,EAAAM,KAIViO,GAAS,SAACE,GACR,MAAM,GAANpO,OAAAqO,aACKD,GAAS,CAGZ,CACExK,GAAInE,EAAKmE,GACTqD,MAAOxH,EAAKwH,MACZuD,OAAQ/K,EAAK+K,OACbE,QAAQ,IAGd,IACAuD,EAAc,IAAItO,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAElBY,QAAQC,MAAKb,EAAAW,IAAQ,yBAAAX,EAAAc,OAAA,GAAArB,EAAA,mBAExB,kBAhCkB,OAAAC,EAAAsB,MAAA,KAAAC,UAAA,KAkCb0N,EAAa,eAAAtP,EAAAC,YAAAC,cAAAC,MAAG,SAAA4B,IAAA,IAAAtB,EAAA,OAAAP,cAAAQ,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UACM,IAAtBqJ,EAAWnD,OAAY,CAAA5E,EAAAtB,KAAA,eAAAsB,EAAAhB,OAAA,wBAAAgB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAKN4N,GAAW,CAC5BxG,MAAOiC,EACPsB,QAAQ,IACP,KAAD,EAHI/K,EAAI0B,EAAAlB,KAIViO,GAAS,SAACE,GACR,MAAM,GAANpO,OAAAqO,aACKD,GAAS,CAMZ,CACExK,GAAInE,EAAKmE,GACTqD,MAAOxH,EAAKwH,MACZuD,OAAQ/K,EAAK+K,OACbE,QAAQ,IAGd,IACAuD,EAAc,IAAI9M,EAAAtB,KAAA,iBAAAsB,EAAAvB,KAAA,GAAAuB,EAAAb,GAAAa,EAAA,SAElBZ,QAAQC,MAAKW,EAAAb,IAAQ,yBAAAa,EAAAV,OAAA,GAAAM,EAAA,mBAExB,kBA9BkB,OAAA/B,EAAA2B,MAAA,KAAAC,UAAA,KAiCb2N,EAAgB,eAAAvN,EAAA/B,YAAAC,cAAAC,MAAG,SAAAoC,EAAOqC,GAAE,IAAA4K,EAAA,OAAAtP,cAAAQ,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAGwB,OAAlD2O,EAAczD,EAAM0D,MAAK,SAACzE,GAAI,OAAKA,EAAKpG,KAAOA,CAAE,IAACnC,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAEhD6N,GAAU,CACd9J,KACA4G,QAASgE,EAAYhE,SACpB,KAAD,EACF0D,GAAS,SAACE,GACR,OAAOA,EAAUpD,KAAI,SAAChB,GACpB,OAAIA,EAAKpG,KAAOA,EACdxD,wBAAA,GACK4J,GAAI,IACPQ,QAASR,EAAKQ,SAGXR,CACT,GACF,IAAGvI,EAAA5B,KAAA,gBAAA4B,EAAA7B,KAAA,EAAA6B,EAAAnB,GAAAmB,EAAA,SAEHlB,QAAQC,MAAKiB,EAAAnB,IAAQ,yBAAAmB,EAAAhB,OAAA,GAAAc,EAAA,kBAExB,gBAvBqBb,GAAA,OAAAM,EAAAL,MAAA,KAAAC,UAAA,KAyBhB8N,EAAU,eAAApN,EAAArC,YAAAC,cAAAC,MAAG,SAAA0O,EAAA/M,GAAA,IAAA8C,EAAAqD,EAAA,OAAA/H,cAAAQ,MAAA,SAAAoO,GAAA,cAAAA,EAAAlO,KAAAkO,EAAAjO,MAAA,OAAkB,OAAT+D,EAAE9C,EAAF8C,GAAIqD,EAAKnG,EAALmG,MAAK6G,EAAAlO,KAAA,EAAAkO,EAAAjO,KAAA,EAI3B6N,GAAU,CACd9J,KACAqD,UACC,KAAD,EACFiH,GAAS,SAACE,GACR,OAAOA,EAAUpD,KAAI,SAAChB,GACpB,OAAIA,EAAKpG,KAAOA,EACdxD,wBAAA,GACK4J,GAAI,IAEP/C,QACAyD,QAAQ,IAGLV,CACT,GACF,IAAG8D,EAAAjO,KAAA,gBAAAiO,EAAAlO,KAAA,EAAAkO,EAAAxN,GAAAwN,EAAA,SAEHvN,QAAQC,MAAKsN,EAAAxN,IAAQ,yBAAAwN,EAAArN,OAAA,GAAAoN,EAAA,kBAExB,gBAxBezM,GAAA,OAAAE,EAAAX,MAAA,KAAAC,UAAA,KAyCV+N,EAAgB,eAAAC,EAAA3P,YAAAC,cAAAC,MAAG,SAAA0P,EAAOjL,GAAE,OAAA1E,cAAAQ,MAAA,SAAAoP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,cAAAiP,EAAAlP,KAAA,EAAAkP,EAAAjP,KAAA,EAIxB+N,GAAWhK,GAAI,KAAD,EAEpBsK,GAAS,SAACE,GAAS,OAAKA,EAAUW,QAAO,SAAC/E,GAAI,OAAKA,EAAKpG,KAAOA,CAAE,GAAC,IAAEkL,EAAAjP,KAAA,eAAAiP,EAAAlP,KAAA,EAAAkP,EAAAxO,GAAAwO,EAAA,SAEpEvO,QAAQC,MAAKsO,EAAAxO,IAAQ,wBAAAwO,EAAArO,OAAA,GAAAoO,EAAA,kBAExB,gBAVqBhN,GAAA,OAAA+M,EAAAjO,MAAA,KAAAC,UAAA,KA8CtB,OAjCAuC,qBAAU,WACR,IAAM6L,EAAa,eAAAC,EAAAhQ,YAAAC,cAAAC,MAAG,SAAA+P,IAAA,IAAAC,EAAA,OAAAjQ,cAAAQ,MAAA,SAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAAvP,MAAA,cAAAuP,EAAAxP,KAAA,EAAAwP,EAAAvP,KAAA,EAEE0N,KAAW,KAAD,EAAxBxC,EAAKqE,EAAAnP,KACXiO,EAASnD,EAAMC,KAAI,SAAChB,GAAI,OAAA5J,wBAAA,GAAW4J,GAAI,IAAEU,QAAQ,GAAK,KAAM0E,EAAAvP,KAAA,gBAAAuP,EAAAxP,KAAA,EAAAwP,EAAA9O,GAAA8O,EAAA,SAE5D7O,QAAQC,MAAK4O,EAAA9O,IAAQ,yBAAA8O,EAAA3O,OAAA,GAAAyO,EAAA,kBAExB,kBAPkB,OAAAD,EAAAtO,MAAA,KAAAC,UAAA,KAQnBoO,GACF,GAAG,IAiBH7L,qBAAU,WACHpB,GACHwC,EAAS,SAEb,GAAG,CAACA,EAAUxC,IAGZwG,eAAA,OAAAhG,SAAA,CAAK,WAEHkB,cAACmF,GACC,CACAtJ,SAAuB,OAAb0C,QAAa,IAAbA,OAAa,EAAbA,EAAe8B,OAE3BL,cAACwF,GAAS,CACRC,WAAYA,EACZZ,SAjMc,SAAC3E,GACnBsK,EAActK,EAChB,EAgMMyF,UAAW+E,EACXhF,UAAWmF,IAEb7K,cAACqH,GAAc,CACbC,MAAOA,EACPb,OAAQwE,EACRzE,aAAcsE,EACdnE,aA7EmB,SAAHiF,GAAwB,IAAlBzL,EAAEyL,EAAFzL,GAAI8G,EAAM2E,EAAN3E,OAC9BwD,GAAS,SAACE,GACR,OAAOA,EAAUpD,KAAI,SAAChB,GACpB,OAAIA,EAAKpG,KAAOA,EACdxD,wBAAA,GACK4J,GAAI,IACPU,OAAQA,IAGZtK,wBAAA,GAAY4J,GAAI,IAAEU,QAAQ,GAC5B,GACF,GACF,EAmEMP,SAAUwE,IAEZlL,cAAC0H,GACC,CACAC,SAAUL,EAAMhF,WAIxB,ECtOeuJ,OAhBf,WACE,OACE7L,cAAA,OAAK4F,UAAU,MAAK9G,SAClBkB,cAAC8L,IAAa,CAACC,SALJC,aAKuBlN,SAChCkB,cAACnB,EAAY,CAAAC,SACXgG,eAACmH,IAAM,CAAAnN,SAAA,CACLkB,cAACkM,IAAK,CAACC,KAAK,QAAQC,QAASpM,cAAC4H,GAAS,MACvC5H,cAACkM,IAAK,CAACC,KAAK,SAASC,QAASpM,cAACgJ,GAAU,MACzChJ,cAACkM,IAAK,CAACC,KAAK,OAAOC,QAASpM,cAACuK,GAAQ,MACrCvK,cAACkM,IAAK,CAACC,KAAK,IAAIC,QAASpM,cAACa,EAAQ,cAM9C,ECdewL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA5Q,GAAkD,IAA/C6Q,EAAM7Q,EAAN6Q,OAAQC,EAAM9Q,EAAN8Q,OAAQC,EAAM/Q,EAAN+Q,OAAQC,EAAMhR,EAANgR,OAAQC,EAAOjR,EAAPiR,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlN,cAACmN,IAAMC,WAAU,CAAAtO,SACfkB,cAAC6L,GAAG,OAORQ,I","file":"static/js/main.9f4a41c4.chunk.js","sourcesContent":["var _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAcLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M25.6996 18.4709C25.6996 18.4709 18.2328 30.5781 12.1109 30.5781C1.40314 30.5781 11.3821 7.51318 19.1916 7.51318C24.641 7.51318 25.6996 18.4709 25.6996 18.4709Z\",\n    fill: \"#FF6600\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M34.5723 33.6972C32.4451 35.9607 29.8198 37.6976 26.9044 38.7701C23.989 39.8426 20.8639 40.2213 17.7767 39.8761C14.6895 39.5309 11.7252 38.4713 9.11881 36.7813C6.51245 35.0914 4.33573 32.8175 2.76123 30.1401C4.5314 32.5477 7.53375 34.1527 11.803 34.1527C22.3199 34.1527 28.2899 25.98 28.2899 25.98C28.2899 25.98 28.8062 32.4392 34.5593 33.6972H34.5723Z\",\n    fill: \"#FF6600\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M37.7223 10.7451C39.2963 13.7527 40.0781 17.1116 39.9939 20.505C39.9096 23.8984 38.9621 27.2144 37.2407 30.1401C35.8792 29.3764 34.8725 28.1082 34.4379 26.609L32.1558 19.7724L37.7223 10.7451Z\",\n    fill: \"#FF6600\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M20.0031 0.0173688C25.0185 0.0140335 29.8513 1.89881 33.5398 5.29665L29.7521 11.4088C28.3811 7.84302 25.5957 4.2729 20.1767 4.2729C9.07841 4.2729 0.852307 16.3888 0.852307 23.9846C0.849861 24.9669 0.975283 25.9454 1.22543 26.8953C0.115582 23.8725 -0.247948 20.6265 0.165719 17.4331C0.579385 14.2398 1.75802 11.1934 3.60147 8.55306C5.44491 5.91269 7.89866 3.75634 10.7542 2.26726C13.6097 0.778179 16.7826 0.000388507 20.0031 0V0.0173688Z\",\n    fill: \"#FF6600\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcLogo);\nexport default __webpack_public_path__ + \"static/media/ac-logo.eea79863.svg\";\nexport { ForwardRef as ReactComponent };","// 引用 axios\r\nimport axios from 'axios';\r\n\r\nconst authURL = 'https://todo-list.alphacamp.io/api/auth';\r\n\r\n// 實作登入方法\r\nexport const login = async ({ username, password }) => {\r\n  try {\r\n    // 定義串接的 end point 網址為\r\n    const { data } = await axios.post(`${authURL}/login`, {\r\n      username,\r\n      password,\r\n    });\r\n    // 先觀察後端回傳的 API 格式，若後端認證成功，\r\n    // 會回傳 authToken 和登入使用者資料，\r\n    const { authToken } = data;\r\n    // 我們運用 authToken 的有無來設計條件式：\r\n    // 若 authToken 存在就代表登入成功，就回傳資料以便後續利用。\r\n    // 在回傳資料時，一併整理資料格式，加上 success 屬性做為 flag，\r\n    // 之後就能用 success 屬性來判斷是否登入成功。\r\n    if (authToken) {\r\n      return { success: true, ...data };\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[Login Failed]:', error);\r\n  }\r\n};\r\n\r\n// 註冊方式\r\nexport const register = async ({ username, email, password }) => {\r\n  try {\r\n    const { data } = await axios.post(`${authURL}/register`, {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n    const { authToken } = data;\r\n\r\n    if (authToken) {\r\n      return { success: true, ...data };\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[Register Failed]: ', error);\r\n  }\r\n};\r\n\r\n// 串接 checkPermission 功能\r\nexport const checkPermission = async (authToken) => {\r\n  try {\r\n    const response = await axios.get(`${authURL}/test-token`, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authToken,\r\n      },\r\n    });\r\n    return response.data.success;\r\n  } catch (error) {\r\n    console.error('[Check Permission Failed]:', error);\r\n  }\r\n};\r\n","import { createContext, useState, useEffect } from 'react'; // 追加 useEffect\r\nimport { login, register, checkPermission } from 'api/auth'; // 追加 checkPermission\r\nimport * as jwt from 'jsonwebtoken';\r\n// 要偵測「路徑是否變化」，則可以運用 react-router-dom 提供的 useLocation 方法，\r\n// 這個方法可以取得瀏覽器網址列中的路徑資訊\r\nimport { useLocation } from 'react-router-dom'; //追加 useLocation\r\n// 在 App 層掛載 AuthProvider\r\nimport { useContext } from 'react';\r\n\r\nconst defaultAuthContext = {\r\n  isAuthenticated: false, // 使用者是否登入的判斷依據，預設為 false，若取得後端的有效憑證，則切換為 true\r\n  currentMember: null, // 當前使用者相關資料，預設為 null，成功登入後就會有使用者資料\r\n  register: null, // 註冊方法\r\n  login: null, // 登入方法\r\n  logout: null, // 登出方法\r\n};\r\n\r\nconst AuthContext = createContext(defaultAuthContext);\r\n\r\n// 用 export 匯出要讓外部元件取用的內容，並自行封裝一個 useAuth，\r\n// 用函式回傳 useContext(AuthContext)\r\n// 之後在其他元件只要匯入 useAuth 就能取用這個 Context 的內容\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// 建立 AuthProvider 來管理狀態，並封裝會影響到身分狀態的註冊、登入、登出方法，\r\n// 它會回傳一個可讓子元件共用的 <AuthContext.Provider>\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  //  是否已獲得授權\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  //  等下會從 authToken 裡解析出使用者資料，放進 currentMember\r\n  const [payload, setPayload] = useState(null);\r\n  //  追加 偵測「路徑是否變化」\r\n  const { pathname } = useLocation();\r\n  //  一旦 pathname 有改變，就需要重新驗證 token，因此需要使用 useEffect，\r\n  //  而 dependency 參數需要設定為 pathname\r\n  useEffect(() => {\r\n    const checkTokenIsValid = async () => {\r\n      // 使用 localStorage.getItem('authToken') 拿出最新的 token\r\n      const authToken = localStorage.getItem('authToken');\r\n      // 如果 authToken 不存在，代表身分驗證未通過\r\n      if (!authToken) {\r\n        setIsAuthenticated(false);\r\n        setPayload(null);\r\n        return;\r\n      }\r\n      // 如果 authToken 存在，呼叫 checkPermission(authToken) 檢查有效性\r\n      const result = await checkPermission(authToken);\r\n      // 若驗證成功\r\n      if (result) {\r\n        setIsAuthenticated(true);\r\n        // 用 jwt.decode 取出使用者資訊，並 setPayload()\r\n        const tempPayload = jwt.decode(authToken);\r\n        setPayload(tempPayload);\r\n      } else {\r\n        // 若驗證無效\r\n        setIsAuthenticated(false);\r\n        setPayload(null);\r\n      }\r\n    };\r\n\r\n    checkTokenIsValid();\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        // 解析 JWT Token 後，從 payload 中取得的登入使用者資料\r\n        // 進一步拿出 payload 中的 sub 和 name，作為使用者的 id 和 name\r\n        currentMember: payload && {\r\n          id: payload.sub,\r\n          name: payload.name,\r\n        },\r\n        // 註冊方法\r\n        register: async (data) => {\r\n          const { success, authToken } = await register({\r\n            username: data.userName, //要注意 是 userName\r\n            email: data.email,\r\n            password: data.password,\r\n          });\r\n          // 透過 jwt.decode 來解析 authToken\r\n          const tempPayload = jwt.decode(authToken);\r\n          // 代表登入是有效的\r\n          if (tempPayload) {\r\n            // 先 setPayload 存進 Context 的內部狀態\r\n            // 同時 isAuthenticated 改成 true\r\n            setPayload(tempPayload);\r\n            setIsAuthenticated(true);\r\n            localStorage.setItem('authToken', authToken);\r\n          } else {\r\n            setPayload(null);\r\n            setIsAuthenticated(false);\r\n          }\r\n          return success;\r\n        },\r\n        // 登入方法\r\n        login: async (data) => {\r\n          const { success, authToken } = await login({\r\n            username: data.userName,\r\n            password: data.password,\r\n          });\r\n          const tempPayload = jwt.decode(authToken);\r\n          if (tempPayload) {\r\n            setPayload(tempPayload);\r\n            setIsAuthenticated(true);\r\n            localStorage.setItem('authToken', authToken);\r\n          } else {\r\n            setPayload(null);\r\n            setIsAuthenticated(false);\r\n          }\r\n          return success;\r\n        },\r\n        // 登出方法\r\n        logout: () => {\r\n          localStorage.removeItem('authToken');\r\n          setPayload(null);\r\n          setIsAuthenticated(false);\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// 接著我們會在 Context 裡實作註冊、登入、登出方法，實作完成以後，\r\n// 會取代掉在 SignUpPage、LoginPage、TodoPage 的流程。\r\n","import { useAuth } from 'contexts/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst HomePage = () => {\r\n  const { isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/todos');\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate, isAuthenticated]);\r\n};\r\n\r\nexport default HomePage;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyedContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst StyledAuthInputContainer = styled.div`\r\n  width: 50%;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  border-radius: 30px;\r\n  background-color: #ff6600;\r\n  border: none;\r\n\r\n  color: white;\r\n  min-width: 300px;\r\n  font-family: 'Noto Sans TC', sans-serif;\r\n  font-weight: bold;\r\n  padding: 6px 0;\r\n  margin: 2rem 0;\r\n  cursor: pointer;\r\n\r\n  &.hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledLinkText = styled.div`\r\n  color: #0062ff;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport {\r\n  StyedContainer as AuthContainer,\r\n  StyledAuthInputContainer as AuthInputContainer,\r\n  StyledButton as AuthButton,\r\n  StyledLinkText as AuthLinkText,\r\n  StyledLink as AuthLink,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/check-active.680985db.svg\";","export default __webpack_public_path__ + \"static/media/check-circle.ad8591fd.svg\";","export default __webpack_public_path__ + \"static/media/check-hover.f1b1bcfd.svg\";","import styled from 'styled-components';\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  background-color: #f5f8fa;\r\n  width: 100%;\r\n  height: 54px;\r\n  border-bottom: 2px solid black;\r\n`;\r\nconst StyledLabel = styled.label`\r\n  font-size: 14;\r\n  color: '#696974';\r\n  text-align: start;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  outline: none;\r\n  border: none;\r\n  background-color: #f5f8fa;\r\n  border-radius: 0px;\r\n`;\r\n\r\nconst AuthInput = ({ type, label, value, placeholder, onChange }) => {\r\n  return (\r\n    <StyledContainer>\r\n      <StyledLabel>{label}</StyledLabel>\r\n      <StyledInput\r\n        type={type || 'text'}\r\n        // 如果外層沒有帶入 props 就預設給一個空字串\r\n        value={value || ''}\r\n        // 如果外層沒有帶入 props 就預設給一個空字串\r\n        placeholder={placeholder || ''}\r\n        onChange={(e) => onChange?.(e.target.value)}\r\n      />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default AuthInput;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  color: var(--major);\r\n  padding: 0 16px;\r\n\r\n  h3 {\r\n    font-weight: 400;\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nconst StyledGreetingText = styled.div`\r\n  color: var(--gray);\r\n  span {\r\n    color: var(--major);\r\n  }\r\n`;\r\n\r\nconst Header = ({ username }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <h3>Tasks</h3>\r\n      <StyledGreetingText>\r\n        Hi <span>{username}</span>\r\n      </StyledGreetingText>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n// 輸入框樣式變化;\r\nimport clsx from 'clsx';\r\n\r\nconst StyledAddTodoContainer = styled.div`\r\n  min-height: 52px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  padding: 0 12px;\r\n  box-shadow: 0 17px 0 -16px #e5e5e5;\r\n  flex-wrap: wrap;\r\n\r\n  &.active {\r\n    box-shadow: 0 17px 0 -16px var(--major);\r\n  }\r\n`;\r\n\r\nconst StyledLabelIcon = styled.label`\r\n  display: inline-flex;\r\n  font-size: 30px;\r\n  transition: color 0.2s ease-out;\r\n  font-weight: 300;\r\n\r\n  &:after {\r\n    content: '+';\r\n  }\r\n`;\r\n\r\nconst StyledInputContainer = styled.div`\r\n  min-height: 52px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 1;\r\n  user-select: none;\r\n\r\n  input {\r\n    flex: 1;\r\n    padding: 8px 12px;\r\n    border: 0;\r\n    outline: 0;\r\n    font-size: 1rem;\r\n\r\n    &::placeholder {\r\n      color: var(--major);\r\n      font-size: 13px;\r\n    }\r\n  }\r\n  &.active {\r\n    input::placeholder {\r\n      color: var(--gray);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledAddTodoActionContainer = styled.div`\r\n  button {\r\n    font-size: 13px;\r\n    color: var(--major);\r\n    padding-right: 5px;\r\n    display: none;\r\n  }\r\n\r\n  &.active {\r\n    button {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n// 按下 ENTER 鍵新增資料\r\nconst TodoInput = ({ inputValue, onChange, onKeyDown, onAddTodo }) => {\r\n  return (\r\n    <StyledAddTodoContainer\r\n      className={clsx('', { active: inputValue.length > 0 })}\r\n    >\r\n      <StyledLabelIcon className=\"icon\" htmlFor=\"add-todo-input\" />\r\n      <StyledInputContainer>\r\n        <input\r\n          id=\"add-todo-input\"\r\n          type=\"text\"\r\n          placeholder=\"新增工作\"\r\n          value={inputValue}\r\n          onChange={(event) => {\r\n            onChange?.(event.target.value);\r\n          }}\r\n          onKeyDown={(event) => {\r\n            if (event.key === 'Enter') {\r\n              onKeyDown?.();\r\n            }\r\n          }}\r\n        />\r\n      </StyledInputContainer>\r\n      <StyledAddTodoActionContainer\r\n        className={clsx('', { active: inputValue.length > 0 })}\r\n      >\r\n        <button className=\"btn-reset\" onClick={() => onAddTodo?.()}>\r\n          新增\r\n        </button>\r\n      </StyledAddTodoActionContainer>\r\n    </StyledAddTodoContainer>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import styled from 'styled-components';\r\nimport {\r\n  CheckActiveIcon,\r\n  CheckCircleIcon,\r\n  CheckHoverIcon,\r\n} from 'assets/images';\r\nimport clsx from 'clsx';\r\nimport { useRef } from 'react';\r\n\r\nconst StyledTaskItem = styled.div`\r\n  min-height: 52px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  padding: 0 12px;\r\n  box-shadow: 0 17px 0 -16px #e5e5e5;\r\n  flex-wrap: wrap;\r\n\r\n  .task-item-body-input {\r\n    user-select: none;\r\n    display: none;\r\n    flex: 1;\r\n    padding: 8px 0px;\r\n    border: 0;\r\n    outline: 0;\r\n    font-size: 1rem;\r\n\r\n    &::placeholder {\r\n      color: var(--gray);\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #fff3eb;\r\n    box-shadow: inset 0 0 0 1px #fff3eb;\r\n\r\n    .task-item-action .btn-destroy {\r\n      display: inline-flex;\r\n    }\r\n  }\r\n\r\n  &.done {\r\n    .task-item-body {\r\n      color: var(--gray);\r\n      text-decoration: line-through;\r\n    }\r\n\r\n    .icon-checked {\r\n      background-image: url(${CheckActiveIcon});\r\n    }\r\n  }\r\n\r\n  &.edit {\r\n    .task-item-body-input {\r\n      display: block;\r\n    }\r\n    .task-item-body-text {\r\n      display: none;\r\n    }\r\n    .task-item-action {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .task-item-checked {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .task-item-body {\r\n    font-weight: 400;\r\n    padding: 8px 12px;\r\n    flex: 1;\r\n    display: flex;\r\n  }\r\n\r\n  .task-item-action {\r\n    .btn-destroy {\r\n      display: none;\r\n      font-size: 30px;\r\n      transition: color 0.2s ease-out;\r\n      font-weight: 300;\r\n      &:after {\r\n        content: '×';\r\n      }\r\n    }\r\n  }\r\n\r\n  .icon-checked {\r\n    background-image: url(${CheckCircleIcon});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n\r\n    &:hover {\r\n      transition: background-image 0.5s;\r\n      background-image: url(${CheckHoverIcon});\r\n    }\r\n  }\r\n`;\r\n\r\nconst TodoItem = ({ todo, onToggleDone, onSave, onDelete, onChangeMode }) => {\r\n  const inputRef = useRef(null);\r\n  const handleKeyDown = (event) => {\r\n    if (inputRef.current.value.length > 0 && event.key === 'Enter') {\r\n      onSave?.({ id: todo.id, title: inputRef.current.value });\r\n    }\r\n    if (event.key === 'Escape') {\r\n      onChangeMode?.({ id: todo.id, isEdit: false });\r\n    }\r\n  };\r\n  return (\r\n    <StyledTaskItem\r\n      className={clsx('', { done: todo.isDone, edit: todo.isEdit })}\r\n    >\r\n      <div className=\"task-item-checked\">\r\n        <span\r\n          className=\"icon icon-checked\"\r\n          onClick={() => {\r\n            onToggleDone?.(todo.id);\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"task-item-body\"\r\n        onDoubleClick={() => onChangeMode?.({ id: todo.id, isEdit: true })}\r\n      >\r\n        <span className=\"task-item-body-text\">{todo.title}</span>\r\n        <input\r\n          ref={inputRef}\r\n          className=\"task-item-body-input\"\r\n          onKeyDown={handleKeyDown}\r\n          defaultValue={todo.title}\r\n        />\r\n      </div>\r\n      <div className=\"task-item-action \">\r\n        <button\r\n          className=\"btn-reset btn-destroy icon\"\r\n          // 追加刪除\r\n          onClick={() => onDelete?.(todo.id)}\r\n        ></button>\r\n      </div>\r\n    </StyledTaskItem>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import TodoItem from './TodoItem';\r\n\r\nconst TodoCollection = ({\r\n  todos,\r\n  onToggleDone,\r\n  onSave,\r\n  onDelete,\r\n  onChangeMode,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {todos.map((todo) => {\r\n        return (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            onSave={({ id, title }) => onSave?.({ id, title })}\r\n            onToggleDone={(id) => onToggleDone?.(id)}\r\n            onChangeMode={({ id, isEdit }) => onChangeMode?.({ id, isEdit })}\r\n            // 追加刪除\r\n            onDelete={(id) => onDelete?.(id)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoCollection;\r\n","import styled from 'styled-components';\r\n\r\n// 實作登出功能\r\n// import { useNavigate } from 'react-router-dom';\r\n// 修改為以下\r\nimport { useAuth } from 'contexts/AuthContext';\r\n\r\nconst StyledFooter = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  padding: 0 16px;\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n    margin: 2rem 0 1rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 0;\r\n  border: 0;\r\n  background: none;\r\n  vertical-align: baseline;\r\n  appearance: none;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  cursor: pointer;\r\n  outline: 0;\r\n\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  margin: 2rem 0 1rem;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst Footer = ({ numTodos }) => {\r\n  // 實作登出功能\r\n  // 登入的概念是：\r\n  // 目前在專案中，判斷是否「登入」的依據是 localStorage 裡的 authToken\r\n  // 因此，「登出」，就是把 localStorage 裡的 authToken 直接清掉\r\n  // 如此一來，之後在發送請求時，因為沒有攜帶憑證，無法通過後端驗證，就等同於登出\r\n  // const navigate = useNavigate();\r\n  // 修改為以下\r\n  const { logout } = useAuth();\r\n\r\n  const handleClick = () => {\r\n    // 使用 localStorage.removeItem移除 authToken\r\n    // localStorage.removeItem('authToken');\r\n    // 引用 useNavigate，將頁面導回登入頁\r\n    // navigate('/login');\r\n    // 修改為以下\r\n    logout();\r\n  };\r\n  return (\r\n    <StyledFooter>\r\n      <p>\r\n        剩餘項目數：\r\n        {/* 修改剩餘項目數 */}\r\n        {numTodos}\r\n      </p>\r\n      <StyledButton onClick={handleClick}>登出</StyledButton>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  AuthContainer,\r\n  AuthInputContainer,\r\n  AuthButton,\r\n  AuthLinkText,\r\n  AuthLink,\r\n} from 'components/common/auth.styled';\r\n\r\nimport { ACLogoIcon } from 'assets/images';\r\nimport { AuthInput } from 'components';\r\nimport { useState, useEffect } from 'react';\r\n// 註冊/登入成功後自動跳轉頁面\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\n// import { login, checkPermission } from '../api/auth'; //刪除\r\n// 修改成以下 掛載 useAuth，取出 login 方法與isAuthenticated 身分狀態\r\nimport { useAuth } from '../contexts/AuthContext'; // 引用封裝好的資訊\r\n\r\nconst LoginPage = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // 這個時候頁面上呼叫的 login() 變成是 AuthContext 裡的方法了，\r\n  // 需要注意回傳值變成只有一個布林值，程式邏輯需要做一點小整理\r\n  const { login, isAuthenticated } = useAuth(); // 取出需要的狀態與方法\r\n\r\n  // 非同步操作，需要加上 async/await\r\n  const handleClick = async () => {\r\n    // 用判斷式排除 username 和 password 長度為 0 的狀況，若為空值則 return 離開\r\n    if (userName.length === 0) {\r\n      return;\r\n    }\r\n    if (password.length === 0) {\r\n      return;\r\n    }\r\n    // 調用 login() 並傳入表單資料 username 和 password\r\n    // const { success, authToken } = await login({\r\n    // 修改成以下 回傳值變成只有一個布林值\r\n    const success = await login({\r\n      userName,\r\n      password,\r\n    });\r\n    // 使用 success 屬性來判斷是否登入成功\r\n    if (success) {\r\n      // 成功代表我們已獲得 authToken，\r\n      // 可用 localStorage.setItem('authToken', authToken) 將資料存入 localStorage 裡\r\n      // 刪除以下\r\n      // localStorage.setItem('authToken', authToken);\r\n\r\n      // 新增使用者提示訊息 使用 sweetalert2\r\n      // 登入成功訊息\r\n      // 頁面掛載 Swal\r\n      Swal.fire({\r\n        // position = 出現位置\r\n        position: 'top',\r\n        // title = 標題文字\r\n        title: '登入成功！',\r\n        // timer = 自動消失時間\r\n        timer: 1000,\r\n        // icon = 登入樣式\r\n        icon: 'success',\r\n        // showConfirmButton = 是否顯示按鈕\r\n        showConfirmButton: false,\r\n      });\r\n      // 刪除以下\r\n      // navigate('/todos');\r\n      return;\r\n    }\r\n\r\n    // 登入失敗訊息\r\n    Swal.fire({\r\n      position: 'top',\r\n      title: '登入失敗！',\r\n      timer: 1000,\r\n      icon: 'error',\r\n      showConfirmButton: false,\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const checkTokenIsValid = async () => {\r\n  //     const authToken = localStorage.getItem('authToken');\r\n  //     if (!authToken) {\r\n  //       return;\r\n  //     }\r\n  //     const result = await checkPermission(authToken);\r\n  //     if (result) {\r\n  //       navigate('/todos');\r\n  //     }\r\n  //   };\r\n\r\n  //   checkTokenIsValid();\r\n  // }, [navigate]);\r\n\r\n  // useEffect 裡改成使用 isAuthenticated 判斷身分狀態，然後根據頁面需求，導引到 /todos\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/todos');\r\n    }\r\n  }, [navigate, isAuthenticated]);\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <div>\r\n        <ACLogoIcon />\r\n      </div>\r\n      <h1>登入 Todo</h1>\r\n\r\n      <AuthInputContainer>\r\n        <AuthInput\r\n          label={'帳號'}\r\n          value={userName}\r\n          placeholder={'請輸入帳號'}\r\n          onChange={(nameInputValue) => setUserName(nameInputValue)}\r\n        />\r\n      </AuthInputContainer>\r\n\r\n      <AuthInputContainer>\r\n        <AuthInput\r\n          // type = 輸入框的類型 (\"password\"=會自動隱藏密碼)\r\n          type=\"password\"\r\n          // label = 輸入框上顯示的標籤文字\r\n          label={'密碼'}\r\n          // value = 使用者輸入的值\r\n          value={password}\r\n          // placeholder = 沒有輸入前預設顯示內容\r\n          placeholder={'請輸入密碼'}\r\n          // onChange 來偵測使用者輸入值，若偵測到輸入事件就將當前的 value 傳遞給父層。\r\n          onChange={(passwordInputValue) => setPassword(passwordInputValue)}\r\n        />\r\n      </AuthInputContainer>\r\n      <AuthButton onClick={handleClick}>登入</AuthButton>\r\n      <AuthLink to=\"/signup\">\r\n        <AuthLinkText>註冊</AuthLinkText>\r\n      </AuthLink>\r\n    </AuthContainer>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import {\r\n  AuthContainer,\r\n  AuthInputContainer,\r\n  AuthButton,\r\n  AuthLinkText,\r\n  AuthLink,\r\n} from 'components/common/auth.styled';\r\n\r\nimport { ACLogoIcon } from 'assets/images';\r\nimport { AuthInput } from 'components';\r\nimport { useState, useEffect } from 'react';\r\n// 註冊/登入成功後自動跳轉頁面\r\n// 使用react-router-dom 提供的 React Hook —— useNavigate\r\n// 可以直接在函式中實現頁面跳轉。\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// 串接註冊功能 追加以下\r\nimport Swal from 'sweetalert2';\r\n// import { register, checkPermission } from '../api/auth';\r\n// 改用成以下\r\nimport { useAuth } from '../contexts/AuthContext'; // 引用封裝好的資訊\r\n\r\nconst SignUpPage = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // 基本的使用方式為：\r\n  const navigate = useNavigate();\r\n\r\n  const { register, isAuthenticated } = useAuth();\r\n\r\n  // 串接註冊功能 追加以下\r\n  const handleClick = async () => {\r\n    if (userName.length === 0) {\r\n      return;\r\n    }\r\n    if (password.length === 0) {\r\n      return;\r\n    }\r\n    if (email.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // const { success, authToken } = await register({\r\n    const success = await register({\r\n      userName,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    // navigate(Path, { ... });\r\n    // 第一個參數帶入路徑，第二個參數可視情況帶入設定項。\r\n\r\n    if (success) {\r\n      // localStorage.setItem('authToken', authToken);\r\n      Swal.fire({\r\n        position: 'top',\r\n        title: '註冊成功！',\r\n        timer: 1000,\r\n        icon: 'success',\r\n        showConfirmButton: false,\r\n      });\r\n      // navigate('/todos');\r\n      return;\r\n    }\r\n    Swal.fire({\r\n      position: 'top',\r\n      title: '註冊失敗！',\r\n      timer: 1000,\r\n      icon: 'error',\r\n      showConfirmButton: false,\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const checkTokenIsValid = async () => {\r\n  //     const authToken = localStorage.getItem('authToken');\r\n  //     if (!authToken) {\r\n  //       return;\r\n  //     }\r\n  //     const result = await checkPermission(authToken);\r\n  //     if (result) {\r\n  //       navigate('/todos');\r\n  //     }\r\n  //   };\r\n\r\n  //   checkTokenIsValid();\r\n  // }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/todos');\r\n    }\r\n  }, [navigate, isAuthenticated]);\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <div>\r\n        <ACLogoIcon />\r\n      </div>\r\n      <h1>建立您的帳號</h1>\r\n\r\n      <AuthInputContainer>\r\n        <AuthInput\r\n          label={'帳號'}\r\n          value={userName}\r\n          placeholder={'請輸入帳號'}\r\n          onChange={(nameInputValue) => setUserName(nameInputValue)}\r\n        />\r\n      </AuthInputContainer>\r\n\r\n      <AuthInputContainer>\r\n        <AuthInput\r\n          label={'Email'}\r\n          value={email}\r\n          placeholder={'請輸入 email'}\r\n          onChange={(emailInputValue) => setEmail(emailInputValue)}\r\n        />\r\n      </AuthInputContainer>\r\n\r\n      <AuthInputContainer>\r\n        <AuthInput\r\n          type=\"password\"\r\n          label=\"密碼\"\r\n          value={password}\r\n          placeholder=\"請輸入密碼\"\r\n          onChange={(passwordInputValue) => setPassword(passwordInputValue)}\r\n        />\r\n      </AuthInputContainer>\r\n      <AuthButton onClick={handleClick}>註冊</AuthButton>\r\n      <AuthLink to=\"/login\">\r\n        <AuthLinkText>取消</AuthLinkText>\r\n      </AuthLink>\r\n    </AuthContainer>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","// 使用 Axios 套件 發送API請求給後端伺服器\r\nimport axios from 'axios';\r\n\r\n// 網址中的共用部分\r\n// const baseUrl = 'http://localhost:3001';\r\n// 重構 如以下\r\nconst baseUrl = 'https://todo-list.alphacamp.io/api';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    // 如果 token 存在的話，就透過 config.headers 來設定 headers，並回傳 config\r\n    // key 使用 Authorization\r\n    // value 使用 Bearer 前綴，並帶上 token\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  // 發送請求失敗的話，使用 arrow function 讓錯誤訊息印出\r\n  (error) => {\r\n    console.error(error);\r\n  },\r\n);\r\n\r\n// 串接 API：預覽 新增 編輯 刪除\r\n// 預覽Todos\r\nexport const getTodos = async () => {\r\n  // 使用try{ }...catch(error){ } 來確認登入是否成功\r\n  try {\r\n    const res = await axiosInstance.get(`${baseUrl}/todos`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Get Todos failed]: ', error);\r\n  }\r\n};\r\n// 新增Todo\r\nexport const createTodo = async (payload) => {\r\n  const { title, isDone } = payload;\r\n  try {\r\n    const res = await axiosInstance.post(`${baseUrl}/todos`, {\r\n      title,\r\n      isDone,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Create Todo failed]: ', error);\r\n  }\r\n};\r\n// 編輯Todo\r\nexport const patchTodo = async (payload) => {\r\n  const { id, title, isDone } = payload;\r\n  try {\r\n    const res = await axiosInstance.patch(`${baseUrl}/todos/${id}`, {\r\n      title,\r\n      isDone,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Patch Todo failed]:', error);\r\n  }\r\n};\r\n// 刪除Todo\r\nexport const deleteTodo = async (id) => {\r\n  try {\r\n    const res = await axiosInstance.delete(`${baseUrl}/todos/${id}`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Delete Todo failed]:', error);\r\n  }\r\n};\r\n","import { Footer, Header, TodoCollection, TodoInput } from 'components';\r\nimport { useState, useEffect } from 'react';\r\n// 新增如下串接API\r\n// import { useEffect } from 'react';\r\nimport { getTodos, createTodo, patchTodo, deleteTodo } from '../api/todos';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { checkPermission } from '../api/auth';\r\n// 改成以下\r\nimport { useAuth } from '../contexts/AuthContext'; // 引用封裝好的資訊\r\n\r\n// const dummyTodos = [\r\n//   {\r\n//     title: 'Learn react-router',\r\n//     isDone: true,\r\n//     id: 1,\r\n//   },\r\n//   {\r\n//     title: 'Learn to create custom hooks',\r\n//     isDone: false,\r\n//     id: 2,\r\n//   },\r\n//   {\r\n//     title: 'Learn to use context',\r\n//     isDone: true,\r\n//     id: 3,\r\n//   },\r\n//   {\r\n//     title: 'Learn to implement auth',\r\n//     isDone: false,\r\n//     id: 4,\r\n//   },\r\n// ];\r\n\r\nconst TodoPage = () => {\r\n  // 設置一個變數 inputValue，用來捕捉最新的資料狀態\r\n  const [inputValue, setInputValue] = useState('');\r\n  //\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // 加入 currentMember\r\n  const { isAuthenticated, currentMember } = useAuth(); // 取出需要的狀態與方法\r\n\r\n  // 設置事件處理器 handleInput，接住子層傳來的 onChange\r\n  // 使用setInputValue 更新資料狀態\r\n  const handleInput = (value) => {\r\n    setInputValue(value);\r\n  };\r\n\r\n  // 新增Todo項目\r\n  const handleAddTodo = async () => {\r\n    // if (inputValue.trim().length === 0) {\r\n    //   return;\r\n    // }\r\n    // 修改為以下\r\n    if (inputValue.length === 0) {\r\n      return;\r\n    }\r\n    // 新增以下 搭配createTodo\r\n    try {\r\n      // await語法糖需搭配 async function\r\n      const data = await createTodo({\r\n        title: inputValue,\r\n        isDone: false,\r\n      });\r\n      setTodos((prevTodos) => {\r\n        return [\r\n          ...prevTodos,\r\n          // { id: Math.random() * 100, title: inputValue, isDone: false },\r\n          // 修改為以下\r\n          {\r\n            id: data.id,\r\n            title: data.title,\r\n            isDone: data.isDone,\r\n            isEdit: false,\r\n          },\r\n        ];\r\n      });\r\n      setInputValue('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // 輸入Todo\r\n  const handleKeyDowm = async () => {\r\n    if (inputValue.length === 0) {\r\n      return;\r\n    }\r\n    // 新增以下 搭配createTodo\r\n    try {\r\n      const data = await createTodo({\r\n        title: inputValue,\r\n        isDone: false,\r\n      });\r\n      setTodos((prevTodos) => {\r\n        return [\r\n          ...prevTodos,\r\n          // {\r\n          //   id: Math.random() * 100,\r\n          //   title: inputValue,\r\n          //   isDone: false,\r\n          // },\r\n          {\r\n            id: data.id,\r\n            title: data.title,\r\n            isDone: data.isDone,\r\n            isEdit: false,\r\n          },\r\n        ];\r\n      });\r\n      setInputValue('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 切換Todo樣式\r\n  const handleToggleDone = async (id) => {\r\n    // 新增以下 對應 patchTodo\r\n    // 使用陣列操作 find，用 id 查找出當下要 toggle 的項目，並存在 currentTodo 裡\r\n    const currentTodo = todos.find((todo) => todo.id === id);\r\n    try {\r\n      await patchTodo({\r\n        id,\r\n        isDone: !currentTodo.isDone,\r\n      });\r\n      setTodos((prevTodos) => {\r\n        return prevTodos.map((todo) => {\r\n          if (todo.id === id) {\r\n            return {\r\n              ...todo,\r\n              isDone: !todo.isDone,\r\n            };\r\n          }\r\n          return todo;\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // 儲存編輯Todo項目\r\n  const handleSave = async ({ id, title }) => {\r\n    // 新增以下\r\n    // 用 patchTodo 修改資料\r\n    try {\r\n      await patchTodo({\r\n        id,\r\n        title,\r\n      });\r\n      setTodos((prevTodos) => {\r\n        return prevTodos.map((todo) => {\r\n          if (todo.id === id) {\r\n            return {\r\n              ...todo,\r\n              // id,\r\n              title,\r\n              isEdit: false,\r\n            };\r\n          }\r\n          return todo;\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 切換Todo編輯模式\r\n  const handleChangeMode = ({ id, isEdit }) => {\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.map((todo) => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            isEdit: isEdit,\r\n          };\r\n        }\r\n        return { ...todo, isEdit: false };\r\n      });\r\n    });\r\n  };\r\n  // 刪除Todo項目\r\n  const handleDeleteTodo = async (id) => {\r\n    // 新增以下\r\n    // try...catch...用來錯誤處理\r\n    try {\r\n      await deleteTodo(id);\r\n      // 使用陣列操作 filter，用 id 選出要刪除的項目\r\n      setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 新增useEffect 取得後端資料。\r\n  useEffect(() => {\r\n    const getTodosAsync = async () => {\r\n      try {\r\n        const todos = await getTodos();\r\n        setTodos(todos.map((todo) => ({ ...todo, isEdit: false })));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    getTodosAsync();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const checkTokenIsValid = async () => {\r\n  //     const authToken = localStorage.getItem('authToken');\r\n  //     if (!authToken) {\r\n  //       navigate('/login');\r\n  //     }\r\n  //     const result = await checkPermission(authToken);\r\n  //     if (!result) {\r\n  //       navigate('/login');\r\n  //     }\r\n  //   };\r\n\r\n  //   checkTokenIsValid();\r\n  // }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate, isAuthenticated]);\r\n\r\n  return (\r\n    <div>\r\n      TodoPage\r\n      <Header\r\n        // Header：帶入登入使用者名稱\r\n        username={currentMember?.name}\r\n      />\r\n      <TodoInput\r\n        inputValue={inputValue}\r\n        onChange={handleInput}\r\n        onAddTodo={handleAddTodo}\r\n        onKeyDown={handleKeyDowm}\r\n      />\r\n      <TodoCollection\r\n        todos={todos}\r\n        onSave={handleSave}\r\n        onToggleDone={handleToggleDone}\r\n        onChangeMode={handleChangeMode}\r\n        // 追加刪除項目\r\n        onDelete={handleDeleteTodo}\r\n      />\r\n      <Footer\r\n        // 追加項目數\r\n        numTodos={todos.length}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoPage;\r\n","import './App.scss';\r\nimport { HomePage, LoginPage, SignUpPage, TodoPage } from './pages';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\n// 在 App 層掛載 AuthProvider\r\nimport { AuthProvider } from 'contexts/AuthContext';\r\n\r\n// 讓 <AuthProvider> 包住所有元件，如此一來子元件就可以取用 Context 的共享內容\r\n// 但需要放在 <BrowserRouter> 裡面，因為我們在 AuthProvider 裡有使用到瀏覽器的資訊\r\n\r\nconst basename = process.env.PUBLIC_URL;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <BrowserRouter basename={basename}>\r\n        <AuthProvider>\r\n          <Routes>\r\n            <Route path=\"login\" element={<LoginPage />} />\r\n            <Route path=\"signup\" element={<SignUpPage />} />\r\n            <Route path=\"todo\" element={<TodoPage />} />\r\n            <Route path=\"*\" element={<HomePage />} />\r\n          </Routes>\r\n        </AuthProvider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}